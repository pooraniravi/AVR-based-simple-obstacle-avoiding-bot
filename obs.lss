
obs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000148  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000031b  00000000  00000000  000001d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f5  00000000  00000000  000004f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002c4  00000000  00000000  000005e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000008ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000b3  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000002e8  00000000  00000000  0000097f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000c67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a2 00 	jmp	0x144	; 0x144 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>
void main()
{
DDRD=0b00000000;
  6c:	11 ba       	out	0x11, r1	; 17
DDRB=0b11111111;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	87 bb       	out	0x17, r24	; 23
PORTD=0b11111111;
  72:	82 bb       	out	0x12, r24	; 18
int c;
while(1)
  {
  c=PIND;
  if(c==0b11111111)
  PORTB=0b11111010;
  74:	7a ef       	ldi	r23, 0xFA	; 250
   _delay_ms(500);
   PORTB=0b11110110;
   _delay_ms(700);
   }
   if(c==0b11111011)
   PORTB=0b11111001;
  76:	49 ef       	ldi	r20, 0xF9	; 249
  PORTB=0b11111010;
  if(c==0b11111110)
  PORTB=0b11110110;
  if(c==0b11111101)
   {
   PORTB=0b11110101;
  78:	55 ef       	ldi	r21, 0xF5	; 245
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7a:	29 e1       	ldi	r18, 0x19	; 25
  7c:	30 e0       	ldi	r19, 0x00	; 0
  {
  c=PIND;
  if(c==0b11111111)
  PORTB=0b11111010;
  if(c==0b11111110)
  PORTB=0b11110110;
  7e:	66 ef       	ldi	r22, 0xF6	; 246
DDRB=0b11111111;
PORTD=0b11111111;
int c;
while(1)
  {
  c=PIND;
  80:	80 b3       	in	r24, 0x10	; 16
  82:	90 e0       	ldi	r25, 0x00	; 0
  if(c==0b11111111)
  84:	8f 3f       	cpi	r24, 0xFF	; 255
  86:	91 05       	cpc	r25, r1
  88:	11 f4       	brne	.+4      	; 0x8e <main+0x22>
  PORTB=0b11111010;
  8a:	78 bb       	out	0x18, r23	; 24
  8c:	1e c0       	rjmp	.+60     	; 0xca <main+0x5e>
  if(c==0b11111110)
  8e:	8e 3f       	cpi	r24, 0xFE	; 254
  90:	91 05       	cpc	r25, r1
  92:	11 f4       	brne	.+4      	; 0x98 <main+0x2c>
  PORTB=0b11110110;
  94:	68 bb       	out	0x18, r22	; 24
  96:	2d c0       	rjmp	.+90     	; 0xf2 <main+0x86>
  if(c==0b11111101)
  98:	8d 3f       	cpi	r24, 0xFD	; 253
  9a:	91 05       	cpc	r25, r1
  9c:	89 f4       	brne	.+34     	; 0xc0 <main+0x54>
   {
   PORTB=0b11110101;
  9e:	58 bb       	out	0x18, r21	; 24
  a0:	88 e8       	ldi	r24, 0x88	; 136
  a2:	93 e1       	ldi	r25, 0x13	; 19
  a4:	f9 01       	movw	r30, r18
  a6:	31 97       	sbiw	r30, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x3a>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  aa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ac:	d9 f7       	brne	.-10     	; 0xa4 <main+0x38>
   _delay_ms(500);
   PORTB=0b11111001;
  ae:	48 bb       	out	0x18, r20	; 24
  b0:	88 e5       	ldi	r24, 0x58	; 88
  b2:	9b e1       	ldi	r25, 0x1B	; 27
  b4:	f9 01       	movw	r30, r18
  b6:	31 97       	sbiw	r30, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x4a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  bc:	d9 f7       	brne	.-10     	; 0xb4 <main+0x48>
  be:	e0 cf       	rjmp	.-64     	; 0x80 <main+0x14>
   PORTB=0b11110101;
   _delay_ms(500);
   PORTB=0b11110110;
   _delay_ms(700);
   }
   if(c==0b11111011)
  c0:	8b 3f       	cpi	r24, 0xFB	; 251
  c2:	91 05       	cpc	r25, r1
  c4:	11 f4       	brne	.+4      	; 0xca <main+0x5e>
   PORTB=0b11111001;
  c6:	48 bb       	out	0x18, r20	; 24
  c8:	db cf       	rjmp	.-74     	; 0x80 <main+0x14>
   if(c==0b11111010)
  ca:	8a 3f       	cpi	r24, 0xFA	; 250
  cc:	91 05       	cpc	r25, r1
  ce:	89 f4       	brne	.+34     	; 0xf2 <main+0x86>
   {
   PORTB=0b11110101;
  d0:	58 bb       	out	0x18, r21	; 24
  d2:	88 e8       	ldi	r24, 0x88	; 136
  d4:	93 e1       	ldi	r25, 0x13	; 19
  d6:	f9 01       	movw	r30, r18
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x6c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  de:	d9 f7       	brne	.-10     	; 0xd6 <main+0x6a>
   _delay_ms(500);
   PORTB=0b11111001;
  e0:	48 bb       	out	0x18, r20	; 24
  e2:	88 e5       	ldi	r24, 0x58	; 88
  e4:	9b e1       	ldi	r25, 0x1B	; 27
  e6:	f9 01       	movw	r30, r18
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x7c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ee:	d9 f7       	brne	.-10     	; 0xe6 <main+0x7a>
  f0:	c7 cf       	rjmp	.-114    	; 0x80 <main+0x14>
   _delay_ms(700);
   }
   if(c==0b11111001)
  f2:	89 3f       	cpi	r24, 0xF9	; 249
  f4:	91 05       	cpc	r25, r1
  f6:	89 f4       	brne	.+34     	; 0x11a <main+0xae>
   {
   PORTB=0b11110101;
  f8:	58 bb       	out	0x18, r21	; 24
  fa:	88 e8       	ldi	r24, 0x88	; 136
  fc:	93 e1       	ldi	r25, 0x13	; 19
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x94>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 104:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 106:	d9 f7       	brne	.-10     	; 0xfe <main+0x92>
   _delay_ms(500);
   PORTB=0b11111001;
 108:	48 bb       	out	0x18, r20	; 24
 10a:	88 e5       	ldi	r24, 0x58	; 88
 10c:	9b e1       	ldi	r25, 0x1B	; 27
 10e:	f9 01       	movw	r30, r18
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0xa4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 114:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 116:	d9 f7       	brne	.-10     	; 0x10e <main+0xa2>
 118:	b3 cf       	rjmp	.-154    	; 0x80 <main+0x14>
   _delay_ms(700);
   }
   if(c==0b11111000)
 11a:	88 3f       	cpi	r24, 0xF8	; 248
 11c:	91 05       	cpc	r25, r1
 11e:	09 f0       	breq	.+2      	; 0x122 <main+0xb6>
 120:	af cf       	rjmp	.-162    	; 0x80 <main+0x14>
   {
   PORTB=0b11110101;
 122:	58 bb       	out	0x18, r21	; 24
 124:	88 e8       	ldi	r24, 0x88	; 136
 126:	93 e1       	ldi	r25, 0x13	; 19
 128:	f9 01       	movw	r30, r18
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0xbe>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 12e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 130:	d9 f7       	brne	.-10     	; 0x128 <main+0xbc>
   _delay_ms(500);
   PORTB=0b11111001;
 132:	48 bb       	out	0x18, r20	; 24
 134:	88 ea       	ldi	r24, 0xA8	; 168
 136:	91 e6       	ldi	r25, 0x61	; 97
 138:	f9 01       	movw	r30, r18
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0xce>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 13e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 140:	d9 f7       	brne	.-10     	; 0x138 <main+0xcc>
 142:	9e cf       	rjmp	.-196    	; 0x80 <main+0x14>

00000144 <_exit>:
 144:	f8 94       	cli

00000146 <__stop_program>:
 146:	ff cf       	rjmp	.-2      	; 0x146 <__stop_program>
